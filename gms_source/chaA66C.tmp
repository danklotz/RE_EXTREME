set t;
set runs/r1*r4/;
set p;
set reg;
set ws;

alias(reg,reg1);
alias(ws,ws1);
alias(p,p1);


parameter load(reg,t);
parameter length(t);
parameter hydro(reg,ws,p,t);
parameter intermittent(reg,p,t);
parameter hydroConvFact(reg,ws,p);
parameter runOffDelay(reg,ws,p);
parameter minFlow(reg,ws,p);
parameter maxFlow(reg,ws,p);
parameter maxReservoir(reg,ws,p);
parameter upRiver(reg,ws,p,reg1,ws1,p1);

$GDXIN "input_tr.gdx"
$LOAD reg,ws,p,t,hydroConvFact,runOffDelay,load
$LOAD length,hydro,intermittent,minFlow,maxFlow,maxReservoir
$GDXIN

parameter results(runs,*);
parameter invest_thermal_cap;


positive variables

***thermal power plants
x_term(reg,p,t),

***intermittent renewables
x_renew(reg,p,t),

***hydropower plants
x_hydro(reg,ws,p,t),
x_spill(reg,ws,p,t),
x_h_stor_in(reg,ws,p,t),
x_h_stor_out(reg,ws,p,t),
x_h_stor_lev(reg,ws,p,t),

***other storage plants
x_stor_in(reg,p,t),
x_stor_out(reg,p,t),
x_stor_lev(reg,p,t),

***curtailment & losses
x_curtail(reg,t),
x_loss(reg,t),

***investments
x_invest_thermal_cap(reg,p),
x_invest_storage(reg,p),
x_invest_intermittent(reg,p)
;

variables
totalCost;

equations
objective

bal,

renewable,

hydro_bal,

storage_h_lev,

storage_h_max,

min_flow,

max_flow,

storage_lev,

storage_max,

res_therm
;


objective             ..totalCost            =E= SUM((reg,p,t),x_term(reg,p,t)+300*x_loss(reg,t))+
                                                 SUM((reg,p  ),50000*x_invest_thermal_cap(reg,p))+
                                                 SUM((reg,p  ),250*x_invest_storage(reg,p))      +
                                                 SUM((reg,p  ),25000*x_invest_intermittent(reg,p))
                                                 ;
*balances supply and demand in the region
bal(reg,t)            ..load(reg,t)          =E= SUM(p,x_term(reg,p,t))              +
                                                 SUM((p,ws),x_h_stor_out(reg,ws,p,t))+
                                                 SUM(p,x_stor_out(reg,p,t))          +
                                                 SUM(p,x_renew(reg,p,t))             +
                                                 SUM((p,ws),x_hydro(reg,ws,p,t))     +
                                                 x_loss(reg,t)                       -
                                                 SUM(p,x_stor_in(reg,p,t))           -
                                                 x_curtail(reg,t)

                                                ;

*********Intermittent renewables*********

*renewable generation at each locatio
renewable(reg,p,t)  ..x_renew(reg,p,t)       =E= intermittent(reg,p,t) *  x_invest_intermittent(reg,p);


*********hydropower production*********

*balance hydropower production at each plant, depending on upper reservoir production
hydro_bal(reg,ws,p,t)..hydro(reg,ws,p,t)     =E= x_hydro(reg,ws,p,t)    +
                                                 x_spill(reg,ws,p,t)    +
                                                 x_h_stor_in(reg,ws,p,t)-
                                                 SUM((reg1,ws1,p1)$upRiver(reg,ws,p,reg1,ws1,p1),hydroConvFact(reg1,ws1,p1)*
                                                 (x_hydro(reg,ws,p-1,t-runOffDelay(reg,ws,p))+x_spill(reg,ws,p-1,t-runOffDelay(reg,ws,p))));

*level of storage in hydropower plants
storage_h_lev(reg,ws,p,t)..x_h_stor_lev(reg,ws,p,t)
                                             =E= x_h_stor_lev(reg,ws,p,t-1)+
                                                 0.9*x_h_stor_in(reg,ws,p,t)-
                                                 x_h_stor_out(reg,ws,p,t);
*maximum level of storage
storage_h_max(reg,ws,p,t)..x_h_stor_lev(reg,ws,p,t)
                                             =L= maxReservoir(reg,ws,p);

*miminum flow constraint
min_flow(reg,ws,p,t)  ..minFlow(reg,ws,p)    =L= x_hydro(reg,ws,p,t)+
                                                 x_spill(reg,ws,p,t);

*maximum flow constraint
max_flow(reg,ws,p,t)  ..maxFlow(reg,ws,p)    =G= x_hydro(reg,ws,p,t)+
                                                 x_spill(reg,ws,p,t);


*********battery storage*********

*level of storage in batteries
storage_lev(reg,p,t)..x_stor_lev(reg,p,t)  =E= x_stor_lev(reg,p,t-1)+
                                                 0.9*x_stor_in(reg,p,t)-
                                                 x_stor_out(reg,p,t);
*maximum level of storage
storage_max(reg,p,t)..x_stor_lev(reg,p,t)  =L= x_invest_storage(reg,p);


*********thermal power production*********

*constraints production to maximal capacity
res_therm(reg,p,t)  ..x_term(reg,p,t)      =L= length(t)*x_invest_thermal_cap(reg,p);

option limrow =100;

model mint/
          all
/;

scalar starttime; starttime = jnow;

SOLVE mint using LP minimizing totalCost;
scalar elapsed; elapsed = (jnow - starttime)*24*3600;

results("r1","thermal")           =SUM((reg,p,t),x_term.l(reg,p,t));
results("r1","reg1")              =SUM((p,t),x_renew.l("reg1",p,t));
results("r1","reg2")              =SUM((p,t),x_renew.l("reg2",p,t));
results("r1","reg3")              =SUM((p,t),x_renew.l("reg3",p,t));
results("r1","reg4")              =SUM((p,t),x_renew.l("reg4",p,t));
results("r1","hydro")             =SUM((reg,ws,p,t),x_hydro.l(reg,ws,p,t));
results("r1","stor_out")          =SUM((reg,p,t),x_stor_out.l(reg,p,t));
results("r1","curtail")           =SUM((reg,t),x_curtail.l(reg,t));
results("r1","investment_thermal")=sum((reg,p),x_invest_thermal_cap.l(reg,p));
results("r1","investment_storage")=sum((reg,p),x_invest_storage.l(reg,p));
results("r1","total cost")        =totalCost.l;
results("r1","elapsed")           =elapsed;
results("r1","load")              =SUM((reg,t),load(reg,t));  ;
results("r1","loss")              =SUM((reg,t),x_loss.l(reg,t));

display  results;

Execute_Unload 'results_time_resolution.gdx',x_term,x_stor_out,x_renew,load,intermittent,hydro,x_stor_in,x_curtail;

*$offtext
